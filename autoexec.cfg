// DPI: 400
// Mouse Hertz: 1000Hz
// Monitor Hertz: 144hz
// Windows Default 5 (Uncheck Enhance Precision)


//================================================== INTRODUCTION

    // If you would like the same configuration to be used across multiple
    // accounts on one system, put the autoexec.cfg file into the following
    // folder:
    //
    // <DRIVE_LETTER>:\<PATH_TO_STEAM>\SteamApps\common\Counter-Strike Global Offensive\csgo\cfg
    //
    // If you would prefer separate configurations for different accounts on
    // your computer [Recommended], put the autoexec.cfg file into the
    // following folder:
    //     <DRIVE_LETTER>:\\<PATH_TO_STEAM>\userdata\<YOURID>\730\local\cfg
    //
    // You will see a message in the developer console if the autoexec is
    // successfully loaded upon launch.
    // You can open the developer console with the key selected in the value
    // under the "toggleconsole" entry in the CONTROLS > KEYBOARD section
    // (Default = "~" otherwise known as Tilde, or "`" otherwise known as Grave
    // on Linux and MacOS).
    //
    // If the config file does not load automatically, you can type the
    // following into the console (without the "quotation marks"):
    //     "+exec autoexec"
    // and press enter. You will then be notified of whether the game has
    // successfully loaded the autoexec.cfg file, as it will display the
    // contents of the "EXECUTION" section at the end of this file.
    //
    // You can also force the autoexec.cfg file to load automatically on every
    // launch by adding it to your launch options, through; opening Steam,
    // going to your game library, right-clicking the entry for Counter-Strike:
    // Global Offensive, selecting "Properties" then under the heading
    // "LAUNCH OPTIONS" and in the text box below it, enter the following
    // (again without the "quotation marks"):
    //     "+exec autoexec"

//==================================================


echo ""
echo "========================================"
echo "      autoexec.cfg is being loaded"
echo "========================================"
echo ""


//================================================== LAUNCH OPTIONS

    echo " Launch Options Settings"
    echo ""

    // Open Steam, go to your game library, right-click the entry for
    // Counter-Strike: Global Offensive, select "Properties" and under the
    // heading "LAUNCH OPTIONS", in the text box below it, enter the following:
    //     -novid = Disable introductory videos to jump right into the games
    //              main menu;
    //     -nojoy, -nosteamcontroller = Disable joystick and steam controller
    //                                  support for the game. Long thought to
    //                                  free up RAM and allow the game to
    //                                  launch faster but it's highly debated
    //                                  whether this has any noticeable impact
    //                                  on performance or not anymore. Still,
    //                                  it can't hurt so long as you don't use
    //                                  either;
    //     +exec autoexec = Ensures that the autoexec.cfg file is read and
    //                      executed;
    //
    // NOTE: Any other launch options are not worth the trouble and likely
    //       snake oil, bar a few useful but very specific ones:
    //         -windowed;
    //         -fullscreen;
    //         -language <NAME>;
    //
    //       Valve has worked hard to make most of the launch options obsolete,
    //       for better or worse, and some of them have always caused issues
    //       anyway, others never worked in CSGO specifically in the first
    //       place. Stick to the above ones and you should be fine... until
    //       these are phased out as well at least.

    // Launches CSGO in Trusted Mode, preventing interactions between the game
    // exe and external applications e.g. performance overlays, as well as
    // stopping stream software from capturing CSGO specifically. Basically, Valve brought a
    // sledgehammer to a knife fight.
    //
    // (0 = Disabled, 1 = Enabled. Default = 1)
    trusted_launch "1"

    // Enforces minimum/maximum values contained in the spec for professional level
    // play.
    //
    // (0 = Disabled/Unenforced, 1 = Enabled/Enforced. Default = 0)
    sv_competitive_minspec "0"

    echo "   [X] Launch Options Settings Loaded"
    echo ""

//================================================== LAUNCH OPTIONS


//================================================== GAMEPLAY

    echo " Gameplay Settings"
    echo ""

    // Automatically switch to weapons as they are picked up.
    //
    // Values:
    //     0 = Disabled;
    //     1 = Enabled (Default);
    cl_autowepswitch "0"

    // Delay unscope and reload animation on sniper rifle.
    //
    // Values:
    //     0 = Disabled (Default);
    //     1 = Enabled;
    cl_sniper_delay_unscope "0"

    // Pressing the key selected under the "+use" binding value (Default = "E")
    // will open the buy menu if in a buy zone.
    //
    // Values:
    //     0 = Disabled;
    //     1 = Enabled (Default);
    cl_use_opens_buy_menu "0"

    // Closes the  radial buy menu after every purchase.
    //
    // Values:
    //     0 = Disabled (Default);
    //     1 = Enabled;
    closeonbuy "1"


    // Prevent radial buy menu from centering mouse on the menu.
    //
    // Values:
    //     0 = Disabled (Default);
    //     1 = Enabled;
    cl_buywheel_nomousecentering "0"

    // Prevent purchasing from radial buy menu via number keys.
    //
    // Values:
    //     0 = Disabled (Default);
    //     1 = Enabled;
    cl_buywheel_nonumberpurchasing "0"

    // Holding the key selected in this value whilst purchasing items in the
    // radial buy menu will donate the purchased item to another player.
    //
    // Values:
    //     0 = Left Control (Default);
    //     1 = Left Alt;
    //     2 = Left Shift;
    cl_buywheel_donate_key "0"

    // Automatically apply highlighted graffiti when the radial graffiti menu
    // closes.
    //
    // Values:
    //     0 = Disabled;
    //     1 = Enabled (Default);
    cl_playerspray_auto_apply "1"

    // Tapping and releasing the radial weapon menu key, selected under the
    // "+quickinv" binding value, selects your last used weapon.
    //
    // Values:
    //     0 = Disabled;
    //     1 = Enabled (Default);
    cl_quickinventory_lastinv "0"

    // Crouch key mode.
    //
    // Values:
    //     0 = Hold to use (Default;
    //     1 = Toggle use;
    option_duck_method "0"

    // Walk key mode.
    //
    // Values:
    //     0 = Hold to use (Default);
    //     1 = Toggle use;
    option_speed_method "0"

    echo "   [X] Gameplay Settings Loaded"
    echo ""

//================================================== GAMEPLAY


//================================================== NETWORK

    echo " Network Settings"
    echo ""

    //================================================== RATES

        // In online FPS games, servers have to simulate the game world constantly.
        // This means calculating positions of objects, players, weapons, grenades,
        // also things like ballistics, blood/damage decals, particle
        // effects/physics. Not only that, but servers must keep track of where
        // these things were, are and will be simultaneously (this is expanded on
        // greatly in the TICKRATE and INTERPOLATION ADVANCED NOTE entries).
        //
        // The servers do this job by calculating everything a certain amount of
        // times per second, the more the better for the most part. A value such as
        // once per second would be a horrendous experience. So, the servers
        // simulate and update the game world in discrete time steps called
        // "ticks". A "tickrate" is a measurement of how many ticks there are per
        // second. So, assuming a base value of 1 second, a tickrate of 128 means
        // the server simulates the world 128 times per second (1 second is 1000
        // milliseconds, divide this by the tickrate value, 128, and we have a
        // result that tells us the game simulates the world every 7.8125
        // milliseconds. Whereas, a tickrate of 64, 1000 รท 64, means the game
        // simulates the world every 15.625 milliseconds). 64 has always been the
        // default tickrate on Valve servers, though dedicated servers use 128.
        // Newer games vary wildly, with Valorant using 128, COD Warzone and PUBG
        //reportedly using around 60 and Apex Legends (actually another Source
        // engine game) using 20. Yes, 20.
        //
        // For the most part, a higher tickrate provides a less "laggy", more
        // responsive and truer representation of the game world overall. That
        // said, tickrate is often intentionally limited to reduce instability
        // introduced by a fluctuating tickrate, as well as to reduce CPU and data
        // transmission costs for performance reasons. A lower tickrate, however,
        // increases latency in the synchronization of the game simulation between
        // the server and client, among other things creating what is now
        // infamously called: desync, with such gems as rubber-banding.
        //
        // So in summary, tickrate is a measurement for how many times per second
        // the server simulates and updates the game world, informing the client.
        // 128 is considered by most the gold standard, or even bare minimum,
        // especially in competitive play. Though Valve themselves, and many other
        // developers, have yet to capitulate to the demand and so a value of
        // around 60 is more common.
        //
        // TICKRATE ADVANCED NOTE:
        //     The servers internal update rate cannot be exceeded regardless of
        //     this settings value. As such, Valve default servers operate at a
        //     default tickrate of 64 and so values of 128 will only cause the
        //     client to demand more updates than it will actually be possible to
        //     receive. However, dedicated servers can and will correctly use a
        //     value of 128. Thus, 64 will be the stock setting here to keep
        //     compliance and circumvent any potential negative implications. But,
        //     this value must be changed via the console ingame if connecting to
        //     non-Valve dedicated servers operating at a tickrate of 128. This can
        //     be done by issuing the following commands:
        //          cl_updaterate "128"
        //          cl_cmdrate "128"
        //     to the console and pressing enter after each line. This will change
        //     the value temporarily until the next launch or executing the
        //     autoexec.cfg file again.
        //
        // INTERPOLATION ADVANCED NOTE:
        //     Interpolation, in this case, is several mechanisms used by the
        //     Source engine to make sure the game retains its fluidity. It is
        //     measured in seconds (A value of 1 = 1 second or 1000 milliseconds, a
        //     value of 0.1 = 100 milliseconds, and so on and so forth). The final
        //     value of interpolation itself is determined by dividing the current
        //     value of the "cl_interp_ratio" convar by the current value of the
        //     "cl_updaterate" convar (cl_interp_ratio รท cl_updaterate = interpolation).
        //
        //     If the entities in the game world were only rendered at the
        //     positions received by the server (see: TICKRATE ADVANCED NOTE),
        //     moving objects and animations would appear choppy. Dropped packets
        //     would also cause noticeable jitter. The trick to solve this problem
        //     is to go back in time for the rendering, meaning what you see on
        //     screen is not necessarily what IS happening but what WAS. This
        //     allows for the client itself to ensure players have an overall much
        //     smoother experience.
        //
        //     So, for example, a "cl_interp_ratio" value equal to 0.1 means your
        //     game client will display the data received 100 milliseconds before
        //     the last/latest data received. Coupled with an "cl_updaterate" equal
        //     to 20, the game client would receive an update every 50 milliseconds
        //     (remember interpolation is 1 = 1 second or 1000 milliseconds, so
        //     interpolation รท update rate or 1000 รท 20 = 50 milliseconds). So with
        //     interpolation equal to 0.1, the client will go back in time 100
        //     milliseconds or 2 updates (50 milliseconds + 50 milliseconds = 100
        //     milliseconds).
        //
        // INTERPOLATION RATIO ADVANCED NOTE:
        //     Ideally, this value should be set to 1 so long as you have a good
        //     enough connection, whereas if you expect issues such as highping or
        //     packet loss a value of 2 is the correct choice. But, when playing
        //     competitively against opponents that have this value set to 2 versus
        //     your value of 1, you could technically be at a disadvantage, albeit
        //     very slight. As such, the only sensible choice and conclusion is
        //     therefore a value of 2. This way the game retains its fluidity,
        //     protection against packet loss and isn't at a disadvantage compared
        //     to other players. What this means technically, is that you will
        //     retain 2000 milliseconds worth of updates:
        //
        //     For 64 tick servers, for example:
        //         cl_interp_ratio รท cl_updaterate or 2000 รท 64 = 31.250, so 2000ms
        //         worth of updates at every 31.250ms or 2000 รท 31.250 = 64 updates
        //         per second.
        //
        //     For 128 tick servers, for example:
        //         cl_interp_ratio รท cl_updaterate or 2000 รท 128 = 15.625, so
        //         2000msworth of updates at every 15.625ms = 128 updates per
        //         second.
        //
        //     Now. you might be thinking, and would technically be correct, that a
        //     value of 1 would keep only the most recent representation of the
        //     simulation, meaning more accurate to the current positions etc and
        //     less "overhead". But, thanks to "cl_lagcompensation" this is not as
        //     simple as it seems.
        //
        // LAG COMPENSATION ADVANCED NOTE:
        //     Between the representation of the game world that is currently
        //     displayed on your monitor and the simulation of the game world
        //     currently on the server, there is a HUGE difference. But, don't
        //     panic, the server knows the interpolation and ping of each player
        //     independently. So, the server can take care of the differences in
        //     configuration of each player using this convar.
        //
        //     There are times when you shoot that you feel your crosshair was not
        //     precisely aiming at another player or where you feel it was but when
        //     you shoot he doesn't get hurt or die. The server calculates events
        //     as such:
        //          current server time - packet latency value - client interpolation value = command execution time
        //     The command execution time means there is a difference between the
        //     reception time of updates that you send to the server (the real time
        //     of the real world) such as mouse input and the time which it
        //     actually occurs ingame (simulated time). To compute this simulated
        //     time from the real time, the server takes note of your ping (the
        //     round-trip time of the data from client to server) and of your
        //     interpolation time, without cl_lagcompensation the disparity between
        //     input - output would be even bigger.
        //
        // PREDICT ADVANCED NOTE
        //     This is another mechanism which the engine uses to smooth out the
        //     simulation and provide a more fluid experience. With a "cl_predict"
        //     value of 1 (meaning input prediction activated), the client will
        //     extrapolate the players intervening positions AFTER sending an
        //     update to the server of the players input and before receiving a
        //     response, technically moving before the server is aware and then
        //     correcting it with the next update returned from the server. Which
        //     will either continue until the completion of the match or cause
        //     rubber-banding.
        //
        //     Let's assume a player has a network latency of 150 milliseconds and
        //     starts to move forward. The information that the forward key is
        //     pressed is stored in a user command packet and sent to the server.
        //     There, the user command is processed and the player's character
        //     model is moved forward in the game world. This world state change is
        //     then transmitted to all clients with the next snapshot update. So
        //     the player would see his actual movement with a 150 milliseconds
        //     delay after he started walking. This delay applies to all player
        //     actions like movement and ballistics etc, and is worsened with
        //     higher latencies/packet loss which can result in lag/jitter.
        //
        //     A delay between the actual player input and the corresponding visual
        //     feedback can create a disjointed and unnatural disconnect that makes
        //     it hard to move or aim precisely. Client-side input prediction is a
        //     way to remove this delay and let the player's actions feel more
        //     instant. Instead of waiting for the server to update the position,
        //     the local client just predicts the results of its own user commands
        //     which it still sends to the server for processing. As the client
        //     runs exactly the same code and rules the server will use to process
        //     the user commands, the result should be identical. After the
        //     prediction is finished, the local player will move instantly to the
        //     new location while the server still sees him at the old place.

        // Maximum number of updates per second the client requests from the
        // server. Refer to the TICKRATE ADVANCED NOTE entry below for more
        // information on this setting.
        //
        // Values:
        //     10  - Minimum;
        //     64  - Default;
        //     128 - Maximum;
        cl_updaterate "64"

        // Maximum number of updates per second the client attempts to push to
        // the server. This means that a value of 128 for this entry on the
        // default Valve 64 tick servers, would have the client sending updates
        // 128 times per second, wasting the last 64 of them as the server will
        // only take the first 64. Also see the "TICKRATE ADVANCED NOTE" entry
        // above for more information on the theory here.
        //
        // Values:
        //     10  - Minimum;
        //     64  - Default;
        //     128 - Maximum;
        cl_cmdrate "64"

        // The rate at which your client can receive network data in bytes per
        // second. If the server attempts to send data at a higher rate than
        // the value of this entry, this can result in packet loss. In theory,
        // the value of this entry should be the value of your connection
        // bandwidth. For example, to calculate for a connection with a maximum
        // download rate equal to 1 Megabytes per second would be 1 Megabyte =
        // 1024 KBytes so 1024 x 1024 = 1048576 bytes per second. With that, in
        // the rates entry you would add a value of "1048576". However, in the
        // real world, games won't send data at 1 Mbytes per second, so a
        // lesser value will suffice.
        //
        // Values:
        //     20480 = 160 kbps (Minimum);
        //     128000 = 0.96 Mbps (matches max tickrate);
        //     196608 = 1.5 Mbps (Default);
        //     262144 = 2.0 Mbps;
        //     327680 = 2.5 Mbps;
        //     393216 = 3.0 Mbps;
        //     524288 = 4.0 Mbps;
        //     786432 = 6+ Mbps (Maximum, Recommended);
        rate "786432"

        // Interpolation (see: INTERPOLATION ADVANCED NOTE).
        //
        // Values:
        //     0 - Disabled [Deprecated];
        //     1 - Enabled [Forced at server level] (Default);
        cl_interpolate "1"

        // Sets the interpolation ratio (see: INTERPOLATION RATIO ADVANCED
        // NOTE).
        //
        // Values:
        //     1 - Minimum;
        //     2 - Default;
        //     5 - Maximum;
        cl_interp_ratio "2"
            
        // Perform server side lag compensation of weapon firing events (see:
        // LAG COMPENSATION ADVANCED NOTE).
        //
        // Values:
        //     0 - Disabled;
        //     1 = Enabled (Default);
        cl_lagcompensation "1"

        // Perform client-side predictions prior to the server-side
        // calculations (see: PREDICT ADVANCED NOTE).
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        cl_predict "1"

        // Perform client side predictions prior to the server-side
        // calculations (see: PREDICT ADVANCED NOTE).
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        cl_predictweapons "1"

        // The maximum preferred ping when connecting to matchmaking servers.
        //
        // Allows to specify the optimal or preferable ping that the client
        // should look for when searching official matchmaking servers for a
        // game. If there are official servers matching this value available,
        // then matchmaking will prioritise joining a match hosted on those
        // servers. If there are no official servers nearby matching this ping
        // value, then official matchmaking will select a match hosted on the
        // next nearest/lowest official server (latency to which may exceed
        // this ping value).
        //
        // Values:
        //     25 -  Minimum;
        //     150 - Default;
        //     350 - Maximum;
        mm_dedicated_search_maxping "50"

        // Number of fragments for a split packet that can be sent per frame.
        // 
        // Values:
        //     1 - Default;
        net_splitrate "1"

        // Maximum size before packets are split.
        //
        // Values:
        //     576  - Minimum;
        //     1200 - Maximum (Default);
        net_maxroutable "1200"

        // Multicast.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        net_allow_multicast "1"

        //================================================== STEAM DATAGRAM RELAY (SDR)

            // SDR override.
            //
            // Values:
            //     -1 - Always use SDR if possible;
            //     0  - Use connect method requested by game client (Default);
            //     1  - Always use direct UDP if possible;
            // net_client_steamdatagram_enable_override "0"

            // Use the relay servers as a fallback. Best if instead specified
            // in console "+net_steamcnx_allowrelay 1"
            //
            // Values:
            //     1 - Default;
            // net_steamcnx_allowrelay "1"

            // Use steam connections as a fallback instead of raw UDP.
            //
            // Values:
            //     1 - Disabled [UDP fallback] (Default);
            //     2 - Enabled [enforced Steam fallback];
            // net_steamcnx_enabled "1"

            echo "   [X] SDR Settings Loaded"

        //==================================================

        // Maximum Quality of Service timeout in seconds.
        //
        // Values:
        //     15 - Default;
        mm_session_search_qos_timeout "15"

        // How many seconds the client will wait without receiving a response
        // from the server before disconnecting itself.
        //
        // Values:
        //     4.0  - Minimum;
        //     30.0 - Maximum (Default);
        cl_timeout "30"

        // How many seconds the client will wait before sending a new
        // connection request to the server (only has an effect BEFORE joining
        // a server.
        //
        // Values:
        //     1.5 - Minimum;
        //     6   - Default;
        //     20  - Maximum;
        cl_resend "2"

        // Total time allowed for the client to resend the 'connect' attempt.
        //
        // Values:
        //     1.5     - Minimum;
        //     60      - Default;
        //     20000 - Maximum;
        cl_resend_timeout "12"

        // Filter for downloads from community servers
        //
        // Values:
        //     auto     - Applies the value from the ingame settings menu;
        //     all      - Allows the download of all custom files (Default);
        //     mapsonly - Download only custom maps;
        //     nosounds - Allows map, material and model downloads but blocks
        //                all sound based files;
        //     none     - Blocks all downloads (map, material, model, sound
        //                etc);
        cl_downloadfilter "all"

        echo "   [X] Rates Settings Loaded"

    //==================================================

    //================================================== SOCIAL

        // Automatically allow friends to click username and join the same
        // game.
        //
        // Values:
        //     0 - Friends can only join games with an invite;
        //     1 - Friends can join games but only on official servers
        //         (Default);
        //     2 - Friends can join games on official and community servers;
        cl_join_advertise "0"
        
        // Ignore invites from anyone that isn't a friend.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        cl_invites_only_friends "1"

        // Ignore all invites when playing a match.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        cl_invites_only_mainmenu "1"

        // Default lobby permissions.
        //
        // Values:
        //     0 - Invite only (Default);
        //     1 - Friends only;
        //     2 - Friends and group;
        //     4 - Friends and nearby;
        //     6 - Friends, group and nearby;
        lobby_default_privacy_bits2 "0"

        echo "   [X] Social Settings Loaded"
    
    //==================================================

    echo "   [X] Network Settings Loaded"
    echo ""

//================================================== NETWORK


//================================================== AUDIO
    
    echo " Audio Settings"
    echo ""

    //================================================== GAME

        // Overall volume level
        //
        // Values:
        //     0.0 - Minimum;
        //     1.0 - Maximum (Default);
        volume "0.50"

        // Sound buffer size. Raising this value can prevent sound bugs such as
        // "crackling" sounds
        //
        // Values:
        //     0.025 - Default;
        snd_mixahead "0.025"

        // Asynchronous sound mixing.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        snd_mix_async "1"

        // Values:
        //     1 - Default;
        snd_pitchquality "1"

        // Values:
        //     1 - Default;
        snd_ducking_off "1"

        // Enhanced software-based 3D stereo sound.(Default = 0).
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        dsp_enhance_stereo "0" // 1 (acevinicius)
        
        // Surround sound speaker setting, (Default = 1)
        //
        // Values:
        //     0 - Headset/Headphones;
        //     1 - Automatic;
        //     2 - Stereo speakers;
        //     4 - Quad surround sound;
        //     5 - 5.1 surround sound;
        snd_surround_speakers "2"

        // Advanced 3D audio processing option [HRTF and Sound Occlusion].
        //
        // Values:
        //     0 = Enabled (Default);
        //     1 = Disabled;
        snd_hwcompat "1" // 0 (acevinicius)

        // Mute game volume when alt-tabbed.
        //
        // Values:
        //     0 - Unmuted;
        //     1 - Muted (Default);
        snd_mute_losefocus "0.000000"

        // Music volume when Steam overlay is active
        //
        // Values:
        //     0 - Minimum;
        //     1 - Maximum (Default);
        snd_musicvolume_multiplier_inoverlay "0.245062" // 0.5 (acevinicius)

        // Main menu music volume.
        //
        // Values:
        //     0 - Minimum;
        //     1 - Maximum (Default);
        snd_menumusic_volume "0.`010503" // 0.027991 (acevinicius)

        // Round start music volume.
        //
        // Values:
        //     0 - Minimum;
        //     1 - Maximum (Default);
        snd_roundstart_volume "0.000000"

        // Round end music volume.
        //
        // Values:
        //     0 - Minimum;
        //     1 - Maximum (Default);
        snd_roundend_volume "0.000000"

        // Bomb planted music volume.
        //
        // Values:
        //     0 - Minimum;
        //     1 - Maximum (Default);
        snd_mapobjective_volume "0.000000" // 0.059499 (acevinicius)

        // 10 Second bomb timer music volume.
        //
        // Values:
        //     0 - Minimum;
        //     1 - Maximum (Default);
        snd_tensecondwarning_volume "0.057989" // 0.297497 (acevinicius)

        // Deathcamera music volume.
        //
        // Values:
        //     0 - Minimum;
        //     1 - Maximum (Default);
        snd_deathcamera_volume "0.000000"

        // Round end MVP music volume.
        //
        // Values:
        //     0 - Minimum;
        //     1 - Maximum (Default);
        snd_mvp_volume "0.297497"

        // MVP music if players from both teams are still alive.
        //
        // Values:
        //     0 = Unmuted;
        //     1 = Muted;
        snd_mute_mvp_music_live_players "0"

        // DangerZone end game music.(Minimum = 0, Maximum = 1).
        //
        // Values:
        //     0 - Minimum;
        //     1 - Maximum (Default);
        snd_dzmusic_volume "0.297497"

        // Controls when a player marks or "pings" a location in game
        //
        // Values:
        //     0 = Unmuted;
        //     1 = Muted (Default);
        cl_player_ping_mute "1"
    
        echo "   [X] Game Settings Loaded"

    //==================================================
 
    //================================================== VOIP

        // VOIP system.
        //
        // Values:
        //     0 - Disallowed [completely disables the VOIP system, meaning
        //         voice cannot be transmitted or received];
        //     1 - Allowed (Default);
        voice_system_enable "1"

        // Ingame VOIP.
        //
        // Values:
        //     0 - Disabled [still allows voice to be transmitted but not
        //         received];
        //     1 - Enabled (Default);
        voice_enable "1"

        // Volume of incoming player VOIP.
        //
        // Values:
        //     0 - Minimum;
        //     1 - Maximum (Default);
        voice_scale "0.151452"

        // Instruct the game to use an alternate microphone than the one
        // currently set in the operating system as the default input device.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        voice_forcemicrecord "1"

        // The threshold at which your microphone will begin to transmitting
        // once surpassed, if using voice activation. In other words, when your
        // voip is louder than this value, it will be transmitted in-game.
        //
        // Values:
        //     300  - Minimum;
        //     2000 - Default;
        //     4000 - Maximum;
        voice_threshold "4000"

        // Volume of personal transmitted VOIP.
        //
        // Values:
        //     -1 - Operating system's current input device settings
        //     0  - Minimum;
        //     1  - Maximum (Default);
        voice_mixer_volume "0.08"

        // Personal transmitted VOIP.
        //
        // Values:
        //     0 - Disallowed [still allows voice to be received from other
        //         players but not transmitted];
        //     1 - Allowed (Default);
        voice_modenable "1"

        // Positional VOIP ingame.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        voice_positional "1"

        // Block all communication except friends and party members.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        cl_mute_all_but_friends_and_party "0"

        // Block all communication from the enemy team.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        cl_mute_enemy_team "0"

        // GOTV caster voice (0 = Disabled, 1 = Enabled. Default = 0).
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        voice_caster_enable "0"

        // Volume of GOTV casters VOIP.
        //
        // Values:
        //     0 - Minimum;
        //     1 - Maximum (Default);
        voice_caster_scale "0.101438"

        echo "   [X] VOIP Settings Loaded"

    //==================================================

    echo "   [X] Audio Settings Loaded"
    echo ""

//================================================== AUDIO


//================================================== UI

    echo " UI Settings"
    echo ""

    // UI ADVANCED NOTE:
    //     The best way to customise this section to your own desires would be
    //     to first have a play in a well-known CSGO users Steam Workshop file,
    //     called: "Config Generator โฎ crashz & Misterio". This map will allow
    //     you to visually alter and test various customisations and options in
    //     real-time.
    //     https://steamcommunity.com/sharedfiles/filedetails/?id=1325659427
    //     Once complete, in the custom workshop map above you can output
    //     theresulting convar's to the console and copy/pasta them from the
    //     ingame console and into this file, in the appropriate sections.
    //     Ctrl + F to search for the convar's you're looking for and then
    //     simply alter the numbers to match your ingame results, this would
    //     probably be the safest way.
    //     
    //     Best practice is to always have multiple backups. This original
    //     autoexec, then your custom one that you work with and then a backup
    //     of the latest custom one that you don't touch.

    //================================================== FUNCTIONS

        // Ingame notifications.(0 = Disabled, 1 = Enabled. Default = 1).
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        con_allownotify "1"

        // Enables the developer console.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        con_enable "1"

        // Radar will be displayed in a square container when viewing the
        // scoreboard, allowing for more of the map to be seen at any given
        // time.
        //
        // Values:
        //     0 - Circular;
        //     1 - Squared (Default);
        cl_radar_square_with_scoreboard "0"

        // Disables freezecam on player death.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        cl_disablefreezecam "1"


        // Disables "Message of the Day" for community servers.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        cl_disablehtmlmotd "1"


        // Replace players names with something nondescript and ultimately
        // inoffensive.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        cl_sanitize_player_names "0"

        // Fix for incorrect calculations of dead players after rounds have
        // ended.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        cl_scoreboard_survivors_always_on "1"

        // Clan name will be shown next to player names in the death notices.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        cl_show_clan_in_death_notice "0"

        // Hide server IP addresses in the console, except upon issuing the
        // 'status' command.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        cl_hideserverip "1"

        echo "   [X] Functions Settings Loaded"

    //==================================================
 
    //================================================== GRAPHICS

        // Draw the frames-per-second meter on screen.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        //     2 - Enabled and smoothed out with minimum/average values;
        //     3 - Server setting;
        //     4 - Enabled and logged to text file;
        cl_showfps "0"

        // Gamma.
        //
        // Values:
        //     1.6 - Minimum [Light];
        //     2.2 - Default;
        //     2.6 - Maximum [Dark];
        mat_monitorgamma "2.2" // 2.0 (acevinicius)

        // TV Gamma.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - TV [Colour range 16-235];
        //     2 - PC [Colour range 0-255];
        mat_monitorgamma_tv_enabled "0"

        //================================================== PERFORMANCE

            // FPS ADVANCED NOTE:
            //     In basic terms, higher FPS does often equal an advantage for
            //     many reasons, among them are more fluid animations with less
            //     blurring/ghosting, as well as known quirk of some games and
            //     their engines which can see increased fire rates, or more
            //     bullets per second, from higher FPS values especially if they
            //     sync with the fire rate of ingame weapons, see:
            //         https://www.reddit.com/r/CompetitivePUBG/comments/ah1u8m/actual_reason_behind_wackyjackys_newest_find_and/
            //         https://www.reddit.com/r/FORTnITE/comments/9j5jk7/fire_rate_is_capped_by_your_fps_not_your_console/
            //     Anything below 30 will likely be nigh unplayable in competitive,
            //     whilst less than 60 cannot be recommended. The optimal setting
            //     here would be either: disabled/unlocked with the values 0/999 or
            //     capped at the refresh rate of your monitor, e.g. 60Hz = 60 FPS,
            //     144Hz = 144 FPS etc. Anything beyond this is technically
            //     surplus.
            //
            //     Testing as yet does not provide unequivocal evidence either 
            //     way that monitors utilising 300Hz and up offer any game /
            //     changing advantage, whereas the jump from 60Hz to anything 
            //     north of 100Hz provides a discernible difference and a 
            //     competitive edge for most players.
            //
            //     Essential further reading on this topic:
            //         https://www.nvidia.com/en-us/geforce/news/what-is-fps-and-how-it-helps-you-win-games/
            //         https://www.nvidia.com/en-us/geforce/news/geforce-gives-you-the-edge-in-battle-royale/

            // Caps the maximum framerate attainable ingame. Refer to the FPS
            // ADVANCED NOTE entry for more information on this topic.
            //
            // Values:
            //     0   - Minimum [Disabled](Default);
            //     30  - Low-spec gamer;
            //     60  - Industry standard;
            //     400 - Default;
            //     999 - Maximum [Unlocked] (999 can be better than 0 for
            //           decreasing some loading times);
            fps_max "999"
            
            // Caps the maximum framerate when in the main menu.
            //
            // Values:
            //     0   - Minimum [Disabled];
            //     120 - Default;
            //     999 - Maximum [Unlocked];
            fps_max_menu "144"

            // Uber Shaders. These can make enemies more discernible in
            // contrast to the scenery, thus it is hard to recommend disabling
            // them if there is performance to spare.
            //
            // Values:
            //     0 - Disabled [Performance];
            //     1 - Enabled [Recommended] (Default);
            mat_enable_uber_shaders "1"

            // This setting determines the threading mode the material system
            // uses, allowing multicore rendering. Another one of those
            // settings with lots of mixed messaging. tl;dr, leave it at -1 and
            // let the engine decide for you. If you have a good PC you can try
            // a value of 2, whereas if you have a potato try 0. Probably best
            // to try all options and compare results or as previously
            // mentioned, leave at -1.
            //
            // Values:
            //     -1 - Client default (Default);
            //     0 - Synchronous single threaded;
            //     1 - Queued single threaded;
            //     2 - Multi-threaded;
            mat_queue_mode "2"

            // Power-saving mode for laptops.
            //
            // Values:
            //     0 - Disabled [Recommended];
            //     1 - Enabled (Default);
            mat_powersavingsmode "0"

            // Slow down background rendering when alt-tabbed out of the game
            // Reduces CPU load but if set too high can cause sound distortion
            // if the "snd_mute_losefocus" value is set to 0 (Default = 50).
            //
            // Values:
            //     0   - Minimum [Disabled];
            //     50  - Default;
            //     100 - Maximum;
            engine_no_focus_sleep "0"

            // Dynamic lighting effects, for example from muzzle flare of
            // weapons discharging or when a flashbang/grenade explodes.
            // Turning these off reportedly offers small performance gains but
            // at the cost of not having as much visual information regarding
            // enemy locations. As such, this tweak cannot be recommended.
            //
            // Values:
            //     0 - Disabled [Performance];
            //     1 - Enabled [Recommended] (Default);
            r_dynamic "1"

            // As the weapons shoot the bullets create "tracers" which are
            // basically trails the bullets create as they travel through the
            // air. Turning these off reportedly offers small performance gains
            // but at the cost of not having as much visual information
            // regarding aim/spread. As such, this tweak cannot be recommended.
            //
            // Values:
            //     0 - Disabled [Performance];
            //     1 - Enabled [Recommended] (Default);
            r_drawtracers_firstperson "1"
            
            echo "   [X] Performance Settings Loaded"

        //==================================================

        echo "   [X] Graphics Settings Loaded"

    //==================================================
 
    //================================================== CROSSHAIR

        // CROSSHAIR ADVANCED NOTE:
        //     The best way currently to find a crosshair that matches your
        //     needs and play style, is to use another of crashz' workshop
        //     files "crashz' Crosshair Generator v3" located here:
        //         https://steamcommunity.com/sharedfiles/filedetails/?id=308490450
        //     This will enable you to check out presets, other popular players
        //     crosshairs and tweak them all to create your own.
        //     
        //     Once complete, in the custom workshop map above you can output
        //     the resulting convar's to the console and copy/pasta them from
        //     the ingame console and into this file, in place of the section
        //     below titled "YOUR CROSSHAIR HERE" or you can input the values
        //     in place of the ones already here (this is much less destructive
        //     and retains my descriptions.
        //
        //     You should also read the section titled "FUNCTIONS" and change
        //     accordingly, but these are unrelated to the appearance of your
        //     base crosshair.

        // FUNCTIONS
        // Alters sniper weapon crosshairs so that standing inaccuracy also
        // affects the blur of the sniper rifle crosshair.
        // (0 = Disabled, 1 = Enabled. Default = 0).
        // Values:
        //     0 - Disabled;
        //     1 - Enabled;
        cl_crosshair_sniper_show_normal_inaccuracy "0"

        // The width, in pixels, of the crosshair when scoped in with a sniper
        // rifle. 
        // Values:
        //     1 - Default;
        cl_crosshair_sniper_width "1"

        // Display friendly fire indicator when aiming at teammates.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled on "cl_crosshairstyle" values 0-1 (Default);
        //     2 - Enabled on all "cl_crosshairstyle" values;
        cl_crosshair_friendly_warning "1" // 2 (acevinicius)

        // Displays the crosshair of the player currently being observed.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Only for friends and party members (Default);
        //     2 - All;
        cl_show_observer_crosshair "2"
 
        // Crosshair visibility.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        crosshair "1"

        // Style of the crosshair (Default = 0), values as follows:
        //
        // Values:
        //     0 - Default        - Large dynamic scaleform crosshair (only
        //                          cl_crosshaircolor can be used to
        //                          customise);
        //     1 - Default Static - Small static scaleform crosshair (only
        //                          cl_crosshaircolor and cl_fixedcrosshairgap
        //                          can be used to customise);
        //     2 - Classic - Crosshair is dynamic when moving and gives
        //                   separate visual feedback when firing (this value
        //                   offers the most customisation);
        //     3 - Classic Dynamic - Crosshair is very dynamic/expands a lot
        //                           when moving and gives smooth feedback when
        //                           firing;
        //     4 - Classic Static - Crosshair is completely static even with
        //                          movement and upon firing weapons;
        //     5 - Classic Dynamic "1.6" - Crosshair is static when moving but
        //                                 expands smoothly when firing;
        cl_crosshairstyle "4" // 5 (acevinicius)

        // Controls the length of lines that make up the crosshair.
        cl_crosshairsize "2.000000"

        // Controls the thickness of the lines that make up the crosshair, as
        // well as the size of the crosshair dot if "cl_crosshairdot" value is
        // set to enabled.
        cl_crosshairthickness "1.000000"

        // Displays a black outline around crosshair lines themselves
        //
        // Values:
        //     0 = Disabled (Default);
        //     1 = Enabled;
        cl_crosshair_drawoutline "0"


        // Thickness of the outline of the crosshair if enabled.
        //(Minimum = 0, Maximum = 3. Default = 1).
        // Values:
        //     0 - Minimum;
        //     1 - Default;
        //     3 - Maximum;
        cl_crosshair_outlinethickness "0.5"
        
        // Displays a dot at the centre of the crosshair. Reducing the
        // "cl_crosshairsize" value to 0 will make it so that there is only a 
        // dot as the crosshair. The value set for "cl_crosshairthickness" 
        // alters the size of the dot.
        //
        // Values:
        //     0 = Disabled;
        //     1 = Enabled (Default);
        cl_crosshairdot "0"

        // Removes the uppermost vertical line on the crosshair, so that there
        // are only 3 lines in a "T" shape rather than 4 in a cross shape, only
        // applies to cl_crosshairstyle values 2-5.
        //
        // Values:
        //     0 = Disabled (Default);
        //     1 = Enabled;
        cl_crosshair_t "0"

        // Adjusts the gap between the lines that form the crosshair, only
        // applies to "cl_crosshairstyle" value of 1.
        cl_fixedcrosshairgap "3"

        // Adjusts the gap between the lines that form the crosshair, only
        // applies to "cl_crosshairstyle" values 2-5.
        cl_crosshairgap "-1.500000"

        // Dynamically adjusts the size of the crosshair based on the weapon
        // you have equipped.
        cl_crosshairgap_useweaponvalue "0"

        // Linear crosshair transparency.
        //
        // Values:
        //     0 - 50% transparency;
        //     1 - Applies the value set under "cl_crosshairalpha".
        cl_crosshairusealpha "1"

        // Custom crosshair transparency.
        //
        // Values:
        //     0 - Minimum [Fully transparent];
        //     200 - Default;
        //     255 - Maximum [Fully opaque];
        cl_crosshairalpha "250"

        // The colour of the crosshair. (Default = 1)
        //
        // Values:
        //     0 - Red
        //     1 - Green
        //     2 - Yellow
        //     3 - Blue
        //     4 - Cyan
        //     5 - Custom (Applies the custom colour values set under
        //         "cl_crosshaircolor_R/_G/_B" values)
        cl_crosshaircolor "5"

        // The saturation level of the red ("cl_crosshaircolor_r"), green 
        // ("cl_crosshaircolor_g") and blue ("cl_crosshaircolor_b") colours.
        //
        // Values:
        //     0   - Minimum [Weak];
        //     255 - Maximum [Strong];
        cl_crosshaircolor_r "200"
        cl_crosshaircolor_g "100"
        cl_crosshaircolor_b "255"

        echo "   [X] Crosshair Settings Loaded"

    //==================================================
 
    //================================================== VIEWMODEL

        // Right or left-handed viewmodel.
        //
        // Values:
        //     0 - Left-handed;
        //     1 - Right-handed (Default);
        cl_righthand "0"

        // Field-of-view.
        //
        // Values:
        //     54 - Minimum (Default);
        //     68 - Default;
        viewmodel_fov "68"

        // The position of the X weapon.
        //
        // Values:
        //     -2   - Minimum [Left];
        //     0    - Default;
        //     +2.5 - Maximum [Right];
        viewmodel_offset_x "2.500000"

        // The position of the X weapon.
        //
        // Values:
        //     -2   - Minimum [Close];
        //     0    - Default;
        //     +2 - Maximum [Far];
        viewmodel_offset_y "0.000000"

        // The position of the X weapon.
        //
        // Values:
        //     -2   - Minimum [Lower];
        //     0    - Default;
        //     +2.5 - Maximum [Higher];
        viewmodel_offset_z "-1.500000"

        // Viewmodel preset.
        // (Default = 1), values as follows:
        // 1 = Desktop - viewmodel_offset_x 1, viewmodel_offset_y 1, 
        //               viewmodel_offset_z -1, viewmodel_fov 60 (Default);
        // 2 = Couch - viewmodel_offset_x 0, viewmodel_offset_y 0,
        //             viewmodel_offset_z 0, viewmodel_fov 54
        // 3 = Classic - viewmodel_offset_x 2.5, viewmodel_offset_y 0,
        //               viewmodel_offset_z -1.5, viewmodel_fov 68
        viewmodel_presetpos "3"

        // How much the viewmodel moves to the left when shooting accuracy 
        // increases.
        //
        // Values:
        //     0.50 - Minimum;
        //     1.50 - Default;
        //     2.00 - Maximum;
        cl_viewmodel_shift_left_amt "1.500000"

        // How much the viewmodel moves to the right when shooting accuracy
        // increases.
        // (Minimum = 0.25, Maximum = 2. Default = 0.75).
        // Values:
        //     0.25 - Minimum;
        //     0.75 - Default;
        //     2.00 - Maximum;
        cl_viewmodel_shift_right_amt "0.750000"

        // How much recoil is shown by the viewmodel when being shot at and
        // subjected to aimpunch effects.
        // Values:
        //     0 - Minimum;
        //     1 - Maximum (Default);
        viewmodel_recoil "1"

        // The amount the weapon model is "hidden" when running, as the gun
        // barrel moves back towards the player model.
        //
        // Values:
        //     5 - Minimum;
        //     21 - Default;
        //     30 - Maximum;
        cl_bob_lower_amt "21.000000"

        // Level of lateral movement of the weapon when running, adjusting how 
        // much the viewmodel sways side to side.
        //
        // Values:
        //     0.1  - Minimum;
        //     0.33 - Default;
        //     2.00 - Maximum;
        cl_bobamt_lat "0.330000"

        // Level of lateral movement of the weapon when running, adjusting how
        // much the viewmodel bobs up and down.
        //
        // Values:
        //     0.1  - Minimum;
        //     0.14 - Default;
        //     2.00 - Maximum;
        cl_bobamt_vert "0.140000"

        // The frequency of view bobbing. This cannot be altered anyway and as
        // such is irrelevant.
        //
        // Values:
        //     0.1  - Minimum;
        //     0.98 - Default;
        //     2.00 - Maximum;
        cl_bobcycle "0.98"

        echo "   [X] Viewmodel Settings Loaded"

    //==================================================
 
    //================================================== RADAR

        // Radar rotates with and based on player movement.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        cl_radar_rotate "1"

        // Size of the radar in the HUD.
        //
        // Values:
        //    0.8 - Minimum [Smaller];
        //    1.0 - Default;
        //    1.3 - Maximum [Bigger];
        cl_hud_radar_scale "0.83"

        // Overall scope of the map inside the radar.
        //
        // Values:
        //     0.25 - Minimum;
        //     0.7  - Default;
        //     1.00 - Maximum;
        cl_radar_scale "0.450000"

        // Centering the map inside the radar on the players position.
        //
        // Values:
        //     0 - Map centred on radar;
        //     1 - Map centred on player (Default);
        cl_radar_always_centered "1"

        // The size of icons and markers on the radar.
        //
        // Values:
        //     0.40 - Minimum;
        //     0.60 - Default;
        //     1.25 - Maximum;
        cl_radar_icon_scale_min "0.6"

        // Teammate differentiators on radar.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Colour only (Default);
        //     2 - Colour and alphabetical letters;
        cl_teammate_colors_show "2"

        // Preferred player colour in matches.
        //
        // Values:
        //     0 - Yellow (Default);
        //     1 - Purple;
        //     2 - Green;
        //     3 - Blue;
        //     4 - Orange;
        cl_color  "1"

        echo "   [X] Radar Settings Loaded"

    //==================================================
 
    //================================================== HUD
        
        //================================================== SELF

            // Controls the scale of various HUD elements.
            //
            // Values:
            //     0.50 - Minimum [Smaller];
            //     0.85 - Default;
            //     0.95 - Maximum [Larger];
            hud_scaling "0.833000"

            // Opacity of the HUD background.
            //
            // Values:
            //     0.00 - Minimum;
            //     0.50 - Default;
            //     1.00 - Maximum;
            cl_hud_background_alpha "0.5"

            // Colour of the HUD.
            //
            // Values:
            //     0  - Light Yellow (Default)
            //     1  - White
            //     2  - Light Blue
            //     3  - Blue
            //     4  - Purple
            //     5  - Red
            //     6  - Orange
            //     7  - Yellow
            //     8  - Green
            //     9  - Cyan
            //     10 - Light Pink
            cl_hud_color "4"

            // Show the current loadout on screen in the bottom right.
            //
            // Values:
            //     0 - Disabled;
            //     1 - Enabled (Default);
            cl_showloadout "1"

            // Simple linear health bar beside standard numerical health and
            // ammo readout.
            //
            // Values:
            //     0 - Disabled (Default);
            //     1 - Enabled;
            cl_hud_healthammo_style "0"

            // Show the bomb icon below the radar, as well as in the inventory.
            //
            // Values:
            //     0 - Inventory only;
            //     1 - Both (Default);
            cl_hud_bomb_under_radar "1"

            echo "   [X] Self Settings Loaded"

        //==================================================

        //================================================== TEAM

            // Avatar and health display of surviving players.
            //
            // Values:
            //     0 - Show (Default);
            //     1 - Show basic numerical count only;
            cl_hud_playercount_showcount "1"

            // The surviving player's numerical readout at the top of the HUD.
            //
            // Values:
            //     0 - Top (Default);
            //     1 - Bottom;
            cl_hud_playercount_pos "1"

            // Display of teammate details above their heads.
            //
            // Values:
            //     -1 - Disabled;
            //      0 - Show with HUD (Default);
            //      1 - Always even when HUD is disabled;
            cl_drawhud_force_teamid_overhead "0"

            // Previously, this command was "cl_teamid_overhead_always".
            // Display of teammate names and loadout above their heads.
            //
            // Values:
            //     0 - Show teammate indicator only when in sight;
            //     1 - Show teammate indicator "pip" through walls and smokes;
            //     2 - Show teammate indicator "pip" as well as loadouts 
            //         through walls and smokes (Default);
            cl_teamid_overhead_mode "2"

            // The max distance that the details above teammate's heads will be
            // visible if the setting "cl_drawhud_force_teamid_overhead" and
            // related "cl_teamid_overhead_mode" are enabled.
            //
            // Values:
            //     200 - Minimum;
            //     3000 - Default;
            //     5000 - Maximum;
            // cl_teamid_overhead_maxdist "5000"

            echo "   [X] Team Settings Loaded"

        //==================================================

        //================================================== ENEMY

            // Enables display of enemy names when aiming at them.
            //
            // Values:
            //     0 - Disabled;
            //     1 - Enabled (Default);
            hud_showtargetid "1"

            echo "   [X] Enemy Settings Loaded"

        //==================================================

        echo "   [X] HUD Settings Loaded"

    //==================================================
 
    //================================================== NETGRAPH
        
        // Network statistics overlay.
        // 
        // Values:
        //     0 - Disabled (Default);
        //     1 - Basic netgraph;
        //     2 - Advanced netgraph;
        //     3 - Advanced netgraph with coloured graph;
        net_graph "1"

        // Netgraph position on screen (Default = 1), 0 and every value above 3
        // sets the distance from the left border of the screen in pixels 
        // depending on resolution.
        //
        // Values:
        //     0     - Left side;
        //     1     - Right side;
        //     2     - Middle;
        //     3-600 - Distance in pixels from the left side of the screen;
        net_graphpos "2"

        // Netgraph distance from the bottom of the screen in pixels, depending
        // on resolution.
        net_graphheight "9999" // 0 (acevinicius)

        // Netgraph is shown as an opaque overlay.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        net_graphsolid "1"

        // Displays text-based statistics on the netgraph.
        //
        // Values:
        //    0 - Disabled;
        //    1 - Enabled (Default);
        net_graphtext "1"

        // Set netgraph font to be proportional.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        net_graphproportionalfont "1"

        // Displays latency in the netgraph.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        net_graphshowlatency "1"

        // Displays interpolation in the netgraph.
        //
        // Values:
        //     0 - Disabled;
        //     1 - Enabled (Default);
        net_graphshowinterp "0" // 1 (acevinicius)

        // The measurement in milliseconds that the graph represents.
        net_graphmsecs "500"
        
        // The maximum value shown on the net_graph
        //
        // Values:
        //     1  - Minimum (Default);
        //     10 - Maximum;
        sv_max_allowed_net_graph "1"

        echo "   [X] Netgraph Settings Loaded"

    //==================================================

    echo "   [X] UI Settings Loaded"
    echo ""

//================================================== UI


//================================================== CONTROLS

    echo " Controls Settings"
    echo ""

    //================================================== FUNCTIONS

        // Clears all previous/default keybindings, ready for personalised ones
        // set in the various binding options below.
        unbindall
        
        // Allows use of the mouse on scoreboard
        cl_scoreboard_mouse_enable_binding "+attack2"

        echo "   [X] Functions Settings Loaded"

    //==================================================

    //================================================== ALIASES
        
        alias +duckjump "+jump; +duck"
        alias -duckjump "-jump; -duck"

        alias +jumpthrow "+jump; -attack"
        alias -jumpthrow "-jump"

        alias +netgraphscores "+showscores; net_graphheight 0"
        alias -netgraphscores "-showscores; net_graphheight 9999"

        alias "defuse_ON" "+use; bind q defuse_OFF"
        alias "defuse_OFF" "-use; bind q defuse_ON"

        alias "+dropbomb" "use weapon_c4; drop"
        alias "-dropbomb" "slot1"

        echo "   [X] Aliases Settings Loaded"

    //==================================================
 
    //================================================== MOUSE
        
        // 1:1 raw mouse input.
        //
        // Values:
        //     0 - Disabled (Default);
        //     1 - Enabled;
        m_rawinput "1"

        // In-game mouse sensitivity.
        //
        // Values:
        //     0000.000100 - Minimum;
        //     0002.500000 - Default;
        //     1000.000000 - Maximum;
        sensitivity "1.550000"

        // Factor of mouse sensitivity when aiming using scoped rifles.
        zoom_sensitivity_ratio_mouse "0.900000"

        // Mouse acceleration.
        //
        // Values:
        //     0 - Minimum [Disabled];
        //     1 - Enabled (Default);,
        //     2 - Maximum;
        m_mousespeed "0"

        // Custom mouse acceleration.
        // (Minimum = 0 [Disabled], 1+ = Enabled, Maximum = 3. Default = 0).
        // Values:
        //     0 - Minimum[Disabled] (Default);
        //     1 - Enabled;
        //     3 - Maximum;
        m_customaccel "0"

        // Pitch factor.
        //
        // Values:
        //     0000.000100 - Minimum;
        //     0000.022000 - Default;
        //     1000.000000 - Maximum;
        m_pitch "0.022"

        // Yaw factor.
        //
        // Values:
        //     0000.000100 - Minimum;
        //     0000.022000 - Default;
        //     1000.000000 - Maximum;
        m_yaw "0.022"

        // Forward factor.
        m_forward "1"
        
        // Side factor.
        m_side "0.8"

        //================================================== binds

            bind "MOUSE1" "+attack"
            bind "MOUSE2" "+attack2"
            bind "MOUSE3" "player_ping"
            bind "MOUSE4" "+voicerecord"
            bind "MOUSE5" "toggle cl_righthand 0 1; r_cleardecals"

            bind "MWHEELDOWN" "+jump"
            bind "MWHEELUP"   "+jump"

            echo "   [X] Binds Settings Loaded"

        //==================================================

        //================================================== KEYBOARD

            bind "w" "+forward"
            bind "a" "+moveleft"
            bind "s" "+back"
            bind "d" "+moveright"

            bind "1" "slot1"
            bind "2" "slot2"
            bind "3" "slot3"
            bind "4" "slot4"
            bind "5" "slot5"
            bind "6" "slot6"
            bind "7" "slot7"
            bind "8" "slot8"
            bind "9" "slot9"
            bind "0" "slot10"
            bind "-" "slot11"
            bind "=" "slot12"

            bind "b" "buymenu"
            bind "e" "+use"
            bind "f" "+lookatweapon; r_cleardecals"
            bind "g" "drop"
            bind "n" "+jumpthrow"
            bind "q" "lastinv"
            bind "r" "+reload"
            bind "t" "+spray_menu"

            bind "m" "teammenu"
            bind "z" "radio1"
            bind "x" "radio2"
            bind "y" "messagemode"
            bind "u" "messagemode2"
            bind "c" "toggleconsole"

            bind "p" "sv_rethrow_last_grenade"

            bind "," "sv_cheats 1; noclip"
            bind "[" "host_timescale 1"
            bind "]" "host_timescale 4"
            bind "\" "say Cala a boca John"
            bind "/" "playerradio deathcry Tirei-Um-Corno-Do-Rabo"

            bind "ESCAPE" "cancelselect"
            bind "TAB"    "+netgraphscores"
            bind "SHIFT"  "+speed"
            bind "CTRL"   "+duck"
            bind "ALT"    "+radar"
            bind "SPACE"  "+duckjump"

            bind "DEL"   "mute"
            bind "PAUSE" "pause"

            bind "UPARROW"   "fov_cs_debug 33"
            bind "DOWNARROW" "fov_cs_debug 0"

            bind "F3"  "autobuy"
            bind "F4"  "rebuy"
            bind "F5"  "jpeg"
            bind "F6"  "save quick"
            bind "F7"  "load quick"
            bind "F10" "quit prompt"

            bind "KP_MINUS"    "toggle voice_enable 1 0"
            bind "KP_ENTER"    "demo_togglepause"
            bind "KP_PLUS"     "demo_timescale 7"
            bind "KP_SLASH"    "radio"
            bind "KP_MULTIPLY" ""

            bind "KP_END"        "demo_timescale 0.1; sv_showimpacts_time 0.1"
            bind "KP_DOWNARROW"  "demo_timescale 0.2; sv_showimpacts_time 0.2"
            bind "KP_PGDN"       "demo_timescale 0.3; sv_showimpacts_time 0.3"
            bind "KP_LEFTARROW"  "demo_timescale 0.4; sv_showimpacts_time 0.4"
            bind "KP_5"          "demo_timescale 0.5; sv_showimpacts_time 0.5"
            bind "KP_RIGHTARROW" "demo_timescale 0.6; sv_showimpacts_time 0.6"
            bind "KP_HOME"       "demo_timescale 0.7; sv_showimpacts_time 0.7"
            bind "KP_UPARROW"    "demo_timescale 0.8; sv_showimpacts_time 0.8"
            bind "KP_PGUP"       "demo_timescale 0.9; sv_showimpacts_time 0.9"
            bind "KP_INS"        "demo_timescale 1;   sv_showimpacts_time 1"

            echo "   [X] Keyboard Settings Loaded"

        //==================================================

        echo "   [X] Mouse Settings Loaded"

    //==================================================

    echo "   [X] Controls Settings Loaded"

//================================================== CONTROLS


//================================================== FINISHING

    // Plays "Let's Roll" soundbite when the config is loaded.
    playvol "ui\mm_success_lets_roll" "0.5"

    echo ""
    host_writeconfig
    echo ""

//================================================== FINISHING


echo "========================================"
echo "    autoexec.cfg loaded successfully"
echo "========================================"
echo ""


// cl_interp "0.0078125"

// snd_duckerattacktime "0.5"
// snd_duckerreleasetime "2.5"
// snd_duckerthreshold "0.15"
// snd_ducktovolume "0.55"
// snd_front_headphone_position "53.2"
// snd_headphone_pan_exponent "1.2"
// snd_headphone_pan_radial_weight "0.5"
// snd_hrtf_distance_behind "100"
// snd_hrtf_voice_delay "0.1"
// snd_music_selection "2"
// snd_music_volume_onetime_reset_2 "1"
// snd_rear_headphone_position "90.0"

// voice_mixer_boost "0"
// voice_mixer_mute "0"
// vprof_graphheight "256"
// vprof_graphwidth "512"
// vprof_unaccounted_limit "0.3"
// vprof_verbose "1"
// vprof_warningmsec "10"

// cl_crosshair_dynamic_maxdist_splitratio "0.35"
// cl_crosshair_dynamic_splitalpha_innermod "1"
// cl_crosshair_dynamic_splitalpha_outermod "0.5"
// cl_crosshair_dynamic_splitdist "7"

// gameinstructor_enable "0"
// cl_showhelp "0"
// cl_autohelp "0"
// equipment
// safezonex "1"
// safezoney "1"

// net_graphholdsvframerate "0"
// net_graphipc "0"
// net_graphshowsvframerate "0"
// net_scale "1.2"

// demo_index "1"

// cl_dm_buyrandomweapons "0"
// hud_takesshots "0"
// player_nevershow_communityservermessage "1"
// spec_replay_autostart "0"
// ui_steam_overlay_notification_position "bottomright"

// m_mouseaccel2 "0"
// m_mouseaccel1 "0"
